{"version":3,"sources":["actions/userActions.js","hocs/withAuth.js","actions/usersActions.js","components/Comment.js","actions/commentActions.js","components/CreateComment.js","containers/Comments.js","components/Post.js","actions/postActions.js","components/CreatePost.js","containers/HomePage.js","components/UserFound.js","containers/SearchResults.js","components/SearchBar.js","components/UserAlert.js","components/Notifications.js","components/HomeHeader.js","pages/LoginPage.js","pages/SignupPage.js","components/uploadPhoto.js","components/uploadProPic.js","actions/messageActions.js","components/ProfilePhoto.js","components/ProfilePhotos.js","components/ProfilePost.js","components/ProfilePosts.js","components/EditProfilePic.js","components/EditBio.js","pages/ProfilePage.js","pages/index.js","components/CreateMessage.js","components/Message.js","components/MessageFriend.js","components/MessageFriends.js","components/MessagesContainer.js","components/MessageHeader.js","App.js","reducers/currentUserReducer.js","reducers/postReducer.js","reducers/commentReducer.js","reducers/usersReducer.js","reducers/messageReducer.js","reducers/rootReducer.js","reducers/loggedInReducer.js","serviceWorker.js","index.js"],"names":["getCurrentUser","dispatch","type","fetch","headers","Authorization","localStorage","token","then","response","status","Error","json","data","message","user","catch","error","logIn","username","password","method","body","JSON","stringify","res","withAuth","ComponentToBeWrapped","Something","this","props","setCurrentUser","e","console","log","history","push","loggedIn","React","Component","mapDispatchToProps","withRouter","connect","state","getUserById","userId","payload","Comment","render","date","Date","comment","created_at","toString","split","Object","keys","length","className","to","id","pro_pic_url","src","splice","url","content","user_id","info","setState","createComment","postContent","postId","post_id","getComments","comments","CreateComment","commentContent","handleChange","event","target","name","value","handleSubmit","preventDefault","undefined","postInfo","commentScroll","document","querySelector","scrollTop","scrollHeight","onSubmit","placeholder","onChange","commentReducer","currentUser","posts","postReducer","Comments","filter","map","Post","commentsClicked","commentsLength","handleCommentsClick","commentCreated","post","slice","onClick","postComments","postUser","createPost","CreatePost","HomePage","postCreated","hasOwnProperty","getPosts","UserFound","handleExit","pro_pics","picture","SearchResults","users","SearchBar","search","toLowerCase","includes","componentDidMount","getUsers","usersReducer","UserAlert","handleExitNotifications","Notifications","requests","request","HomeHeader","onLogout","logOut","goToProfile","notificationsClicked","handleNotifClick","alert","pending_friend_requests","window","location","reload","clear","LoginPage","SignupPage","passwordConfirmation","email","signUp","errors","uploadPhoto","photoFile","formData","FormData","append","axios","config","handleFile","currentTarget","files","uploadProPic","proPicFile","createMessage","messageContent","friendship_id","getMessages","messages","ProfilePhoto","clicked","enlarge","photo","ProfilePhotos","photos","ProfilePost","parentElement","reverse_posts","EditProfilePic","handleCloseIcon","bioContent","profileUser","handleEditProfile","bio","ProfilePage","iconClicked","editProfileClicked","pathname","uploadedPhoto","handleIconClick","parseInt","handleFriendRequest","friendRequestSent","handleAccept","friendship","find","friendRequest","acceptedRequest","handleUnfriend","friends","friend","unfriended","userInfo","CreateMessage","messageInfo","Message","objDiv","MessageFriend","handleOpenMessages","notifications","openMessage","forEach","updateMessage","handleCloseMessages","closeMessage","messageCreated","viewed","sortedMessages","sort","a","b","openedMessage","viewedMessage","messageReducer","MessageFriends","friendshipId","messagesInfo","MessagesContainer","handleClose","MessageHeader","open","handleOpen","messages_info","flat","App","basename","Fragment","exact","path","component","Pages","exect","routerProps","defaultState","loading","combineReducers","action","Boolean","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc8bc36a.chunk.js","sourcesContent":["export const getCurrentUser = () => dispatch => {\n\tdispatch({ type: \"GET_PROFILE_REQUEST_START\" })\n\n\treturn fetch('http://furbook-api.herokuapp.com/profile', {\n        headers: {\n        \tAuthorization: localStorage.token\n      \t}\n    }).then((response) => {\n    if (response.status === 401) {\n      throw new Error(\"Unauthorized\")\n    }\n    return response\n  }).then(response => {\n    return response.json()\n  }).then((data) => {\n    if (data.message === \"Please log in\") {\n      throw new Error(\"Unauthorized\")\n    }\n    return data\n  }).then(user => {\n    dispatch({\n      type: \"GET_PROFILE_REQUEST_SUCCESS\",\n      user: user\n    })\n  }).catch((error) => {\n    if (error.message === \"Unauthorized\") {\n      dispatch({\n        type: \"GET_PROFILE_REQUEST_FAILURE\",\n        error: error\n      })\n    }\n  })\n}\n\nexport const logIn = (username, password) => dispatch => {\n  dispatch({ type: \"LOGIN_REQUEST_START\" })\n  return fetch('http://furbook-api.herokuapp.com/login', {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Accept': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t})\n\t})\n\t .then(res => res.json())\n  .then((data) => {\n    localStorage.token = data.token\n    dispatch({ type: 'LOGIN_REQUEST_SUCCESS' })\n  })\n  .catch(error => {\n    dispatch({ type: 'LOGIN_REQUEST_FAILURE', error: error })\n  })\n}\n\nexport const signUp = (username, password, email) => dispatch => {\n  dispatch({ type: \"SIGNUP_REQUEST_START\" })\n  return fetch('http://furbook-api.herokuapp.com/signup', {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Accept': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tusername: username,\n\t\t\tpassword: password,\n\t\t\temail: email\n\t\t})\n\t})\n\t.then(res => res.json())\n  // .then((user) => {\n  //   dispatch({ type: 'SIGNUP_REQUEST_SUCCESS' })\n  // })\n  // .catch(error => {\n  //   dispatch({ type: 'SIGNUP_REQUEST_FAILURE', error: error })\n  // })\n}\n\nexport const logOut = () => dispatch => {\n  window.location.reload();\n  localStorage.clear()\n  dispatch({ type: 'LOGOUT' })\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getCurrentUser } from '../actions/userActions'\n\nexport default function withAuth(ComponentToBeWrapped) {\n  class Something extends React.Component {\n    componentDidMount() {\n      if (!localStorage.token) {\n        // this.props.history.push(\"/login\")\n      }\n      try {\n        this.props.setCurrentUser()\n          .catch(e => {\n            console.log(\"try\")\n            this.props.history.push(\"/myProfile\")\n          })\n      } catch (e) {\n        if (e.message === \"Please log in\") {\n          console.log(\"catch\")\n          this.props.history.push(\"/login\")\n        }\n      }\n    }\n\n    render() {\n      return <ComponentToBeWrapped\n        loggedIn={this.props.loggedIn}\n        {...this.props} />\n    }\n  }\n\n  const mapStateToProps = state => {\n    return {\n      loggedIn: state.loggedIn\n    }\n  }\n\n  const mapDispatchToProps = {\n    setCurrentUser: getCurrentUser\n  }\n\n  return withRouter(connect(mapStateToProps, mapDispatchToProps)(Something))\n}","export const getUsers = () => {\n\n  return function(dispatch){\n    fetch(\"http://furbook-api.herokuapp.com/users\", { \n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n         Authorization: localStorage.token\n      }})\n    .then(res => res.json())\n    .then(users => {\n      dispatch({ type: 'FETCH_USERS', payload: users})\n    })\n  }\n  // Return is an action\n  // return { type: FETCH_MY_POSTS, payload: myWallPosts }\n}\n\nexport const getUserById = (userId) => {\n  \n  return function(dispatch){\n    fetch(`http://furbook-api.herokuapp.com/users/${userId}`, { \n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n         Authorization: localStorage.token\n      }})\n    .then(res => res.json())\n    .then(user => {\n      dispatch({ type: 'FETCH_USER', payload: user})\n    })\n  }\n  // Return is an action\n  // return { type: FETCH_MY_POSTS, payload: myWallPosts }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUserById } from '../actions/usersActions';\nimport { connect } from 'react-redux';\n\nclass Comment extends React.Component {\n\n  state = {\n    user: {}\n  }\n  \n  componentDidMount() {\n    // debugger\n    fetch(`http://furbook-api.herokuapp.com/users/${this.props.comment.user_id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n         Authorization: localStorage.token\n      } \n    })\n    .then(res => res.json())\n    .then(info => this.setState({user: info}))\n  }\n  render = () => {\n    // console.log(this.state)\n    // console.log(\"COMMENT:\", this.props)\n    let date = new Date(this.props.comment.created_at)\n    date = date.toString();\n    date = date.split(' ');\n    date = date[0] + ' ' + date[1] + ' ' + date[2] + ' ' + date[3];\n    if (Object.keys(this.state.user).length) {\n      // debugger\n      return (\n        <li className=\"comment-content views\">\n          <div className=\"comment-content comment-div\">\n            <div className=\"icon-date\">\n              <Link className=\"comment-link\" to={`/users/${this.state.user.id}`} >\n                <div className=\"icon-img-text\">\n                  {this.props.comment.user.pro_pic_url.length ?\n                    <img className=\"icon-img\" src={this.props.comment.user.pro_pic_url.splice(-1)[0].url} />\n                  :\n                    <img className=\"icon-img\" src='https://image.flaticon.com/icons/png/512/17/17479.png' />\n                  }\n                  <div className=\"comment-icon\"> \n                    {this.state.user.username}\n                  </div>\n                </div>\n              </Link>\n              <div className=\"comment-date\">\n                {date.toString()}\n              </div>\n            </div>\n            <div className=\"comment-text\">\n              {this.props.comment.content}\n            </div>\n          </div>\n        </li>\n      );\n    }\n    else return null\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state)\n  return {\n    user: state.currentUser,\n    comments: state.commentReducer.comments\n  }\n}\n\nconst mapDispatchToProps = {\n  // more to do for getComments redux\n  getUserById: getUserById\n}\n\nexport default connect()(Comment);","\nexport const createComment = (postContent, userId, postId) => {\n  // debugger\n  return function(dispatch) {\n    fetch('http://furbook-api.herokuapp.com/comments', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n         Authorization: localStorage.token\n      },\n      body: JSON.stringify({\n        user_id: userId,\n        post_id: postId,\n        content: postContent\n      })\n    })\n    .then(res => res.json())\n    .then(comment => {\n      // ONCE THE FETCH HAS FINISHED WE SHOULD THEN DISPATCH\n      dispatch({type: \"CREATE_COMMENT\", payload: comment })\n    })\n  }\n}\n\nexport const getComments = () => {\n  return function(dispatch){\n    fetch(\"http://furbook-api.herokuapp.com/comments\", { \n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n         Authorization: localStorage.token\n      }})\n    .then(res => res.json())\n    .then(comments => {\n      dispatch({ type: 'FETCH_MY_COMMENTS', payload: comments})\n    })\n  }\n  // Return is an action\n  // return { type: FETCH_MY_POSTS, payload: myWallPosts }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createComment } from '../actions/commentActions';\nimport withAuth from '../hocs/withAuth';\nimport { withRouter } from 'react-router-dom';\n\nclass CreateComment extends React.Component {\n\t\n\tstate = {\n    // posts: this.props.currentUser.posts,\n    commentContent: ''\n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n\thandleSubmit = (event) => {\n    event.preventDefault();\n    if (this.props.postInfo !== undefined) {\n      this.props.dispatch(createComment(this.state.commentContent, this.props.user.id, this.props.postInfo.id))\n      this.setState({commentContent: ''}) \n      // this.props.commentCreated();\n      var commentScroll = document.querySelector(\".comment-container\");\n      if (commentScroll) {\n        commentScroll.scrollTop = commentScroll.scrollHeight;\n      }\n    }\n  }\n\n\trender = () => {\n    // console.log(\"createComment:\", this.props)\n\t  return (\n\t\t  <form className=\"commentForm\" onSubmit={this.handleSubmit}>\n\t\t    <h3>Write a comment</h3>\n        <div className=\"commentInputs\">\n  \t\t    <textarea className=\"commentInput\" type=\"text\" placeholder=\"Leave a comment...\" value={this.state.commentContent} onChange={this.handleChange} name=\"commentContent\"/>\n  \t\t    <input className=\"commentSubmit\" type=\"submit\" value=\"Comment\"/>\n        </div>\n\t\t  </form>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n  // console.log(state)\n  return {\n    comments: state.commentReducer.comments,\n    user: state.currentUser,\n    posts: state.postReducer.posts\n  }\n}\n\nexport default withAuth(connect(mapStateToProps)(withRouter(CreateComment)));","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Comment from '../components/Comment';\nimport CreateComment from '../components/CreateComment';\nimport { getComments } from '../actions/commentActions';\nimport { connect } from 'react-redux';\nimport withAuth from '../hocs/withAuth';\nimport { withRouter } from 'react-router-dom';\n\nclass Comments extends React.Component {\n\n  state = {\n    username: ''\n  }\n\n  componentDidMount() {\n  \tthis.props.getComments();\n  }\n  \n  render = () => {\n    var commentScroll = document.querySelector(\".comment-container\");\n    if (commentScroll) {\n      commentScroll.scrollTop = commentScroll.scrollHeight;\n    }\n    // var postScroll = document.querySelector(\".profile-posts\");\n    // if (postScroll) {\n    //   // debugger\n    //   postScroll.scrollTop = 10000;\n    // }\n    // var commentScroll = document.querySelector(\".profile-container\");\n    // if (commentScroll) {\n    //   commentScroll.scrollTop = commentScroll.scrollHeight;\n    // }\n  \t// console.log(\"FROM COMMENTS: \", this.props)\n  \tlet comments = this.props.comments.filter(comment => comment.post_id === this.props.info.id)\n\n    return (\n    \t<div className=\"all-comments\">\n\t      <div className=\"comment-container\">\n\t      \t{comments.length ? comments.map(comment => <Comment comment={comment}/>) : <div className=\"no-comments\">There are no comments...</div>}\n\t      </div>\n\t     </div>\n    );\n  }\n}\n// might have to move comments to posts\nconst mapStateToProps = state => {\n  // console.log(state)\n  return {\n    user: state.currentUser,\n    comments: state.commentReducer.comments\n  }\n}\n\nconst mapDispatchToProps = {\n  // more to do for getComments redux\n  getComments: getComments\n}\n\nexport default withAuth(connect(mapStateToProps, mapDispatchToProps)(withRouter(Comments)))","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Comments from '../containers/Comments';\nimport CreateComment from './CreateComment';\nimport { getComments } from '../actions/commentActions';\nimport { connect } from 'react-redux';\nimport withAuth from '../hocs/withAuth';\nimport { withRouter } from 'react-router-dom';\n// import IconPhoto from './IconPhoto';\n\nclass Post extends React.Component {\n\n  state = {\n    commentsClicked: false,\n    commentsLength: 0\n  }\n\n  handleCommentsClick = () => {\n    this.setState({commentsClicked: !this.state.commentsClicked})\n  }\n\n  commentsLength = (length) => {\n    this.setState({commentsLength: length})\n  }\n\n\n  \n  componentDidMount() {\n    // console.log(this.props.post)\n    this.props.getComments();\n    fetch(`http://furbook-api.herokuapp.com/users/${this.props.post.user_id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n         Authorization: localStorage.token\n      } \n    })\n    .then(res => res.json())\n    .then(info => this.setState({postUser: info}))\n    // debugger\n  }\n\n  commentCreated = () => {\n    this.props.getComments();\n  }\n\n  render = () => {\n    // console.log(\"post: \", this.props)\n    // console.log(this.props.post)\n    let comments = this.props.comments.filter(comment => comment.post_id === this.props.post.id)\n    let date = new Date(this.props.post.created_at)\n    date = date.toString();\n    date = date.split(' ');\n    date = date[0] + ' ' + date[1] + ' ' + date[2] + ' ' + date[3];\n    // console.log(\"hi from posts\")\n    return (\n      <div className=\"post-content\">\n        <div className=\"post-div\">\n          <div className=\"icon-date\">\n            <div className=\"icon-img-text\"> \n              <Link to={`/users/${this.props.post.user.id}`} >\n                <div className=\"icon-img-text\">\n                  {this.props.post.user.pro_pic_url.length ?\n                    <img className=\"icon-img\" src={this.props.post.user.pro_pic_url.slice(-1)[0].url} />\n                  :\n                    <img className=\"icon-img\" src='https://image.flaticon.com/icons/png/512/17/17479.png' />\n                  }\n                  <div className=\"icon\"> \n                    {this.props.post.user.username}\n                  </div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"date\">\n              {date.toString()}\n            </div>\n          </div>\n          <div className=\"content\">\n            {this.props.post.content}\n          </div>\n          {this.state.commentsClicked ? \n            <div className=\"comments-container\">\n              <a className=\"comment-tag\" onClick={this.handleCommentsClick}>\n                comments ({comments.length})\n              </a>\n              <Comments commentsLength={this.commentsLength} postComments={this.props.comments} info={this.props.post}/>\n            </div>\n          : \n            <a className=\"comment-tag\" onClick={this.handleCommentsClick}>comments ({comments.length})</a>}\n          <div className=\"createComment\">\n            <CreateComment commentCreated={this.commentCreated} postInfo={this.props.post} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  // console.log(state)\n  return {\n    user: state.currentUser,\n    comments: state.commentReducer.comments\n  }\n}\n\nconst mapDispatchToProps = {\n  // more to do for getComments redux\n  getComments: getComments\n}\n\nexport default withAuth(connect(mapStateToProps, mapDispatchToProps)(withRouter(Post)))","\nexport const createPost = (postContent, userId) => {\n  return function(dispatch) {\n    fetch('http://furbook-api.herokuapp.com/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n         Authorization: localStorage.token\n      },\n      body: JSON.stringify({\n        user_id: userId,\n        content: postContent\n      })\n    })\n    .then(res => res.json())\n    .then(post => {\n      // ONCE THE FETCH HAS FINISHED WE SHOULD THEN DISPATCH\n      dispatch({type: \"CREATE_POST\", payload: post })\n    })\n    // debugger\n  }\n}\n\nexport const getPosts = () => {\n\n  return function(dispatch){\n    fetch(\"http://furbook-api.herokuapp.com/posts\", { \n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n         Authorization: localStorage.token\n      }})\n    .then(res => res.json())\n    .then(posts => {\n      dispatch({ type: 'FETCH_MY_POSTS', payload: posts})\n    })\n  }\n  // Return is an action\n  // return { type: FETCH_MY_POSTS, payload: myWallPosts }\n}\n\nexport const getPostById = (id) => {\n\n  return function(dispatch){\n    fetch(`http://furbook-api.herokuapp.com/posts/${id}`, { \n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n         Authorization: localStorage.token\n      }})\n    .then(res => res.json())\n    .then(post => {\n      dispatch({ type: 'FETCH_MY_POST', payload: post})\n    })\n  }\n  // Return is an action\n  // return { type: FETCH_MY_POSTS, payload: myWallPosts }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createPost } from '../actions/postActions';\nimport withAuth from '../hocs/withAuth';\nimport { withRouter } from 'react-router-dom';\nimport { getComments } from '../actions/commentActions';\n\n\nclass CreatePost extends React.Component {\n\t\n\tstate = {\n    // posts: this.props.currentUser.posts,\n    postContent: ''\n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n\thandleSubmit = (event) => {\n    event.preventDefault();\n     this.props.dispatch(createPost(this.state.postContent, this.props.user.id))\n     this.setState({postContent: ''}) \n  }\n\n\trender = () => {\n\t  return (\n\t\t  <form className=\"create-post-form\" onSubmit={this.handleSubmit}>\n\t\t    <h2 className=\"createAPost\">create a post</h2>\n        <div className=\"postInputs\">\n  \t\t    <textarea className=\"postInput\" type=\"text\" placeholder=\"What's on your mind?\" value={this.state.postContent} onChange={this.handleChange} name=\"postContent\"/>\n  \t\t    <input className=\"postSubmit\" type=\"submit\" value=\"Post\"/>\n        </div>\n\t\t  </form>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n  // console.log(state)\n  return {\n    user: state.currentUser,\n    comments: state.commentReducer.comments,\n    posts: state.postReducer.posts\n  }\n}\n\nconst mapDispatchToProps = {\n  // more to do for getComments redux\n  getComments: getComments\n}\n\nexport default withAuth(connect(mapStateToProps)(withRouter(CreatePost)));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrentUser } from '../actions/userActions';\nimport withAuth from '../hocs/withAuth';\nimport { withRouter } from 'react-router-dom';\nimport Post from '../components/Post';\nimport CreatePost from '../components/CreatePost';\nimport { getPosts } from '../actions/postActions';\n\nclass HomePage extends React.Component {\n\n\n  componentDidMount() {\n    if ((!localStorage.token ) && this.props.hasOwnProperty('history')) this.props.history.push(\"/\")\n      this.props.getPosts();\n      // debugger\n      // console.log(\"rerendered homepage\")\n      // console.log(this.props);\n  }\n\n  // componentDidUpdate() {\n  //   this.props.getPosts();\n  // }\n  render = () => {\n    \n    // console.log(\"homepage: \", this.props)\n    if (!this.props.user.id) return null\n    return (\n      <div className=\"HomePage\">\n        <h1 className=\"Hi\"> {this.props.user.id ? `Here is your feed ${this.props.user.username}!` : 'Getting your profile...'}</h1>\n        <div className=\"post-form-container\">\n          <div className=\"postForm\">\n            <CreatePost postCreated={this.postCreated} user={this.props.user}/>\n          </div>\n        </div>\n        <div className=\"posts-container\">\n          <div className=\"posts\">{this.props.posts && this.props.user.id ? this.props.posts.map(post => <Post post={post} comments={post.comments} />) : 'Getting your feed...'}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state)\n  return {\n    user: state.currentUser,\n    posts: state.postReducer.posts\n  }\n}\n\nconst mapDispatchToProps = {\n  setCurrentUser: getCurrentUser,\n  getPosts: getPosts\n}\n\nexport default withAuth(connect(mapStateToProps, mapDispatchToProps)(withRouter(HomePage)))","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass UserFound extends React.Component {\n\n\n  render = () => {\n    \n    // console.log(\"homepage: \", this.props)\n    console.log(this.props.user)\n    return (\n      <div className=\"user-found\">\n      \t<Link className=\"user-found-name\"onClick={() => this.props.handleExit()} to={`/users/${this.props.user.id}`}>\n\t\t      {this.props.user.pro_pics.length ?\n\t\t        <img className=\"search-icon-img\" src={this.props.user.pro_pics.slice(-1)[0].picture.url} />\n\t\t      :\n\t\t        <img className=\"search-icon-img\" src='https://image.flaticon.com/icons/png/512/17/17479.png' />\n\t\t      }\n\t        {this.props.user.username}\n        </Link>\n      </div>\n    );\n  }\n}\n\n\nexport default UserFound;","import React from 'react';\nimport UserFound from '../components/UserFound';\n// import { connect } from 'react-redux';\n// import { getCurrentUser } from '../actions/userActions';\n// import withAuth from '../hocs/withAuth';\n// import { withRouter } from 'react-router-dom';\n// import Post from '../components/Post';\n// import CreatePost from '../components/CreatePost';\n// import { getPosts } from '../actions/postActions';\n\nclass SearchResults extends React.Component {\n\n  render = () => {\n    \n    // console.log(\"homepage: \", this.props)\n    return (\n      <div className=\"search-modal-content\">\n        <span className=\"close\" onClick={() => this.props.handleExit()}>x</span>\n        <h2> search results: </h2>\n        {this.props.users.length ? this.props.users.map(user => <UserFound user={user} handleExit={this.props.handleExit}/>) : <div className=\"no-user-found\"> No users found... </div>}\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = state => {\n//   // console.log(state)\n//   return {\n//     user: state.currentUser,\n//     posts: state.postReducer.posts\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   setCurrentUser: getCurrentUser,\n//   getPosts: getPosts\n// }\n\nexport default SearchResults","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getUsers } from '../actions/usersActions'\nimport SearchResults from '../containers/SearchResults';\n\nclass SearchBar extends React.Component {\n\n  state = {\n    // posts: this.props.currentUser.posts,\n    search: '',\n    users: []\n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n    let search = this.props.users.filter(user => user.username.toLowerCase().includes(this.state.search.toLowerCase()))\n    this.setState({users: search})\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  }\n\n\n  componentDidMount = () => {\n    this.props.getUsers();\n  }\n\n  handleExit = () => {\n    this.setState({\n      // posts: this.props.currentUser.posts,\n      search: '',\n      users: []\n    })\n  }\n\n  render = () => {\n    // console.log(this.state);\n    return (\n      <div className=\"user-search-bar\">\n        <form className=\"search-user-form\" onSubmit={this.handleSubmit}>\n        <div className=\"search-inputs\">\n          <textarea className=\"search-user\" type=\"text\" placeholder=\"Find your friends...\" value={this.state.postContent} onChange={this.handleChange} name=\"search\"/>\n          <input className=\"submit-search-user\" type=\"submit\" value=\"search\"/>\n          {this.state.search ? \n            <div className=\"search-modal\">\n              <SearchResults users={this.state.users} handleExit={this.handleExit}/>\n            </div>\n          : \n          null}\n        </div>\n      </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.currentUser,\n    users: state.usersReducer.users\n  }\n}\n\nconst mapDispatchToProps = {\n  getUsers: getUsers\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar)","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass UserAlert extends React.Component {\n\n  render = () => {\n    if (!this.props.user.id) return null;\n    // console.log(\"homepage: \", this.props)\n    // console.log(this.props)\n    // debugger\n    return (\n      <div className=\"notfication-alert\">\n        <Link to={`/users/${this.props.user.id}`} onClick={() => this.props.handleExitNotifications()}>\n          {this.props.user.username} wants to be friends. Click here to checkout {this.props.user.username}'s page. \n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default UserAlert","import React from 'react';\nimport UserAlert from './UserAlert';\n\nclass Notifications extends React.Component {\n\n  render = () => {\n    // console.log(\"homepage: \", this.props)\n    return (\n      <div className=\"notfications-modal-content\">\n        <span className=\"close\" onClick={() => this.props.handleExitNotifications()}>x</span>\n        <h2> Your Notifications: </h2>\n        {this.props.requests.length ? this.props.requests.map(request => <UserAlert user={request.user} handleExitNotifications={this.props.handleExitNotifications}/>) : <div className=\"no-notifications-found\"> No notifications... </div>}\n      </div>\n    );\n  }\n}\n\n\nexport default Notifications","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logOut } from '../actions/userActions';\nimport SearchBar from './SearchBar';\nimport Notifications from './Notifications';\n\nclass HomeHeader extends React.Component {\n\n  onLogout = () => {\n    this.props.logOut()\n  }\n\n  goToProfile = () => {\n\n  }\n\n  state = {\n    notificationsClicked: false\n  }\n\n  handleNotifClick = () => {\n    this.setState({notificationsClicked: !this.state.notificationsClicked})\n  }\n\n  handleExitNotifications = () => {\n    this.setState({\n      // posts: this.props.currentUser.posts,\n      notificationsClicked: false\n    })\n  }\n\n  render = () => {\n    if (localStorage.token === \"undefined\") {\n      alert(\"Invalid login\")\n      this.props.logOut()\n    }\n  \tif (!localStorage.token && this.props.hasOwnProperty('history')) this.props.history.push(\"/\")\n      // console.log(this.props)\n    // debugger\n    if (!this.props.user.id) return null;\n    return (\n      <div className=\"dropdownmenu\">\n        <ul>\n          <li><h2>furbook</h2></li>\n          <li><SearchBar/></li>\n          <li><Link to=\"/home\">Feed</Link></li> \n        \t<li><Link to={`/users/${this.props.user.id}`}>Profile</Link></li> \n          <li><a className=\"notif\" onClick={this.handleNotifClick}>Notifications ({this.props.user.pending_friend_requests.length})</a></li>\n          <li onClick={this.onLogout}><Link to=\"/login\">Logout</Link></li>\n        </ul>\n        {this.state.notificationsClicked ?\n        <div className=\"notifications-modal\">\n          <Notifications handleExitNotifications={this.handleExitNotifications} requests={this.props.user.pending_friend_requests}/>\n        </div>\n        :\n          null\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.currentUser\n  }\n}\n\nconst mapDispatchToProps = {\n  logOut: logOut\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeHeader)","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { logIn } from '../actions/userActions'\n\nclass LoginPage extends React.Component{\n\n\tstate = {\n\t\tusername: \"\",\n\t\tpassword: \"\"\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({[event.target.name]: event.target.value})\n\t\t// console.log(this.state);\n\t}\n\n\tcomponentDidMount = () => {\n\t\tif (localStorage.token) this.props.history.push(\"/home\");\n\t}\n\n\thandleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.props.logIn(this.state.username, this.state.password)\n\t\t\t.then(()=> {\n\t\t\t\tthis.props.history.push(\"/home\")\n\t\t\t})\n\t}\n\n  render = () => {\n    return (\n\t    <div className=\"LoginPage\">\n\t\t    <div className=\"form-container sign-in-container\">\n\t\t      <form className=\"loginForm\" onSubmit={this.handleSubmit}>\n\t\t      \t<h1>Sign in</h1>\n\t\t        <input className=\"loginInput\" type=\"text\" placeholder=\"Username\" value={this.state.username} onChange={this.handleChange} name=\"username\"/>\n\t\t        <input className=\"loginInput\" type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} name=\"password\"/>\n\t\t        <input className=\"loginSubmit\" type=\"submit\" value=\"Login\"/>\n\t\t      </form>\n\t\t    </div>\n\t\t    <div className=\"overlay-container\">\n\t\t\t\t\t<div className=\"overlay\">\n\t\t\t\t\t\t<div className=\"overlay-panel overlay-left\">\n\t\t\t\t\t\t\t<h1>Welcome Back!</h1>\n\t\t\t\t\t\t\t<p>To keep connected with us please login with your personal info</p>\n\t\t\t\t\t\t\t<button className=\"ghost\" id=\"signIn\">Sign In</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"overlay-panel overlay-right\">\n\t\t\t\t\t\t\t<h1>Hello, Friend!</h1>\n\t\t\t\t\t\t\t<p>Enter your personal details and start your journey with us</p>\n\t\t\t\t\t\t\t<Link to=\"/signup\"><button className=\"ghost\" id=\"signUp\">Sign Up</button></Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t  </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.currentUser\n  }\n}\n\nconst mapDispatchToProps = {\n    logIn: logIn\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp, logIn } from '../actions/userActions';\n\nclass SignupPage extends React.Component{\n\n\tstate = {\n\t\tusername: \"\",\n\t\tpassword: \"\",\n\t\tpasswordConfirmation: \"\",\n\t\temail: \"\",\n\t\tuser: {}\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({[event.target.name]: event.target.value})\n\t\t// console.log(this.state);\n\t}\n\n\tcomponentDidMount() {\n    if (localStorage.token && this.props.hasOwnProperty('history')) {\n      this.props.history.push(\"/home\")\n    }\n  }\n\n\thandleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tif (this.state.password !== this.state.passwordConfirmation) {\n\t\t\talert(\"Passwords do not match\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.props.signUp(this.state.username, this.state.password, this.state.email)\n\t\t.then(user => this.setState({user: user}));\n\t}\n\n  render = () => {\n  \tif (this.state.user) {\n  \t\tif (this.state.user.token) {\n  \t\t\tlocalStorage.token = this.state.user.token;\n  \t\t\tthis.props.history.push('/home');\n  \t\t}\n  \t}\n  \t// debugger\n    return (\n    \t<div className=\"LoginPage\">\n\t    \t<div className=\"form-container sign-up-container\">\n\t    \t\t{this.state.user.hasOwnProperty('errors') ? <div className=\"errors-container\"><ul className=\"errors\">{this.state.user.errors.map(error => <li className=\"error\">{error}</li>)}</ul></div> : null}\n\t\t      <form className=\"signupForm\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<h1>Create Account</h1>\n\t\t\t      <input className=\"signupInput\" type=\"text\" placeholder=\"Username\" value={this.state.username} onChange={this.handleChange} name=\"username\"/>\n\t\t\t      <input className=\"signupInput\" type=\"text\" placeholder=\"Email\" value={this.state.email} onChange={this.handleChange} name=\"email\"/>\n\t\t\t      <input className=\"signupInput\" type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} name=\"password\"/>\n\t\t\t      <input className=\"signupInput\" type=\"password\" placeholder=\"Confirm Password\" value={this.state.passwordConfirmation} onChange={this.handleChange} name=\"passwordConfirmation\"/>\n\t\t\t      <input className=\"signupSubmit\" type=\"submit\" value=\"Sign up\"/>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"overlay-container\">\n\t\t\t\t\t<div className=\"overlay\">\n\t\t\t\t\t\t<div className=\"overlay-panel overlay-right\">\n\t\t\t\t\t\t\t<h1>Welcome Back!</h1><p>To keep connected with us please login with your personal info</p>\n\t\t\t\t\t\t\t<Link to=\"/\"><button className=\"ghost\" id=\"signIn\">Sign In</button></Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.currentUser\n  }\n}\n\nconst mapDispatchToProps = {\n    signUp: signUp,\n    logIn: logIn\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupPage)\n","import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass uploadPhoto extends React.Component {\n\n\tstate = { \n\t\tphotoFile: null\n\t}\n\n\thandleSubmit = (e) => {\n\t\t// debugger;\n\t\te.preventDefault();\n\t\tconst formData = new FormData();\n\t\tformData.append('photo[user_id]', this.props.user.id);\n\t\tformData.append('photo[picture]', this.state.photoFile);\n\t\t// const formData = { user_id: this.props.userInfo.id, picture: this.state.photoFile};\n\t\t// debugger;\n\t\taxios({\n\t    method: 'POST',\n\t    url: `http://furbook-api.herokuapp.com/photos`,\n\t    data: formData,\n\t    config: { headers: {'Content-Type': 'multipart/form-data', 'Authorization': `Bearer ${localStorage.token}` }}\n\t  })\n\t  .then(() => window.location.reload(false))\n\t  // this.props.uploadedPhoto();\n\t}\n\n\thandleFile = (e) => {\n\t\tthis.setState({photoFile: e.currentTarget.files[0]});\n\t}\n\n\trender() {\n\t\t// console.log(this.state);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tUpload a new photo\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<input type=\"file\" onChange={this.handleFile}/>\n\t\t\t\t\t<button className=\"upload-button\">Upload Photo </button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tuser: state.currentUser\n\t}\n}\n\nexport default connect(mapStateToProps)(uploadPhoto);","import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass uploadProPic extends React.Component {\n\n\tstate = { \n\t\tproPicFile: null\n\t}\n\n\thandleSubmit = (e) => {\n\t\t// debugger;\n\t\te.preventDefault();\n\t\tconst formData = new FormData();\n\t\tformData.append('pro_pic[user_id]', this.props.user.id);\n\t\tformData.append('pro_pic[picture]', this.state.proPicFile);\n\t\t// const formData = { user_id: this.props.userInfo.id, picture: this.state.photoFile};\n\t\taxios({\n\t    method: 'POST',\n\t    url: `http://furbook-api.herokuapp.com/pro_pics`,\n\t    data: formData,\n\t    config: { headers: {'Content-Type': 'multipart/form-data', 'Authorization': `Bearer ${localStorage.token}` }}\n\t  })\n\t  .then(() => window.location.reload(false))\n\t}\n\n\thandleFile = (e) => {\n\t\tthis.setState({proPicFile: e.currentTarget.files[0]});\n\t}\n\n\trender() {\n\t\t// console.log(this.props);\n\t\treturn (\n\t\t\t<div className=\"uplaod-form\">\n\t\t\t\tUpload a new profile picture\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<input type=\"file\" onChange={this.handleFile}/>\n\t\t\t\t\t<button className=\"upload-button\">Upload Photo </button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tuser: state.currentUser\n\t}\n}\n\nexport default connect(mapStateToProps)(uploadProPic);","export const createMessage = (messageContent, user_id, friendship_id) => {\n  // debugger\n  return function(dispatch) {\n    fetch('http://furbook-api.herokuapp.com/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n         Authorization: localStorage.token\n      },\n      body: JSON.stringify({\n        user_id: user_id,\n        friendship_id: friendship_id,\n        content: messageContent\n      })\n    })\n    .then(res => res.json())\n    .then(message => {\n      // ONCE THE FETCH HAS FINISHED WE SHOULD THEN DISPATCH\n      dispatch({type: \"CREATE_MESSAGE\", payload: message })\n    })\n  }\n}\n\nexport const getMessages = () => {\n  return function(dispatch){\n    fetch(\"http://furbook-api.herokuapp.com/messages\", { \n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n         Authorization: localStorage.token\n      }})\n    .then(res => res.json())\n    .then(messages => {\n      dispatch({ type: 'FETCH_MY_MESSAGES', payload: messages})\n    })\n  }\n  // Return is an action\n  // return { type: FETCH_MY_POSTS, payload: myWallPosts }\n}\n\nexport const viewedMessage = (message) => {\n  // debugger\n\n  return function(dispatch) {\n    fetch(`http://furbook-api.herokuapp.com/messages/${message.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n         Authorization: localStorage.token\n      },\n      body: JSON.stringify(\n      {\n        'viewed': true\n      })\n    })\n    .then(res => res.json())\n    .then(console.log)\n    // .then(message => {\n    //   // ONCE THE FETCH HAS FINISHED WE SHOULD THEN DISPATCH\n    //   dispatch({type: \"VIEWED_MESSAGE\", payload: message })\n    // })\n  }\n}","import React from 'react';\n\nexport default class ProfilePhoto extends React.Component {\n\n\tstate = {\n\t\tclicked:false\n\t}\n\n\tenlarge = () => {\n\t\tthis.setState({clicked: !this.state.clicked})\n\t}\n\n\trender = () => {\n\t\t// debugger\n\t\t// console.log(this.state)\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{this.state.clicked ? \n\t\t\t\t\t<div className=\"pic-modal\">\n\t\t\t\t\t\t<button onClick={this.enlarge} className=\"closePic\">X</button>\n\t\t\t\t\t\t<img className=\"modal-profile-photo\" src={this.props.photo.picture.url} />\n\t\t\t\t\t</div> \n\t\t\t\t: \n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t\t{this.props.photo.picture.url.split('.').slice(-1)[0] === 'mp4' || this.props.photo.picture.url.split('.').slice(-1)[0] === 'mov' ?\n\t\t\t\t\t<video > src={this.props.photo.picture.url} </video>\n\t\t\t\t:\n\t\t\t\t\t<img onClick={this.enlarge} className=\"profile-photo\" src={this.props.photo.picture.url} />\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}","import React from 'react';\nimport ProfilePhoto from './ProfilePhoto';\n\nexport default class ProfilePhotos extends React.Component {\n\n\trender = () => {\n\t\treturn(\n\t\t\t<div className=\"profile-photos\" >\n\t\t\t\t{this.props.photos.map(photo => <ProfilePhoto photo={photo}/>)}\n\t\t\t</div>\n\t\t)\n\t}\n}","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Comments from '../containers/Comments';\nimport CreateComment from './CreateComment';\nimport { getComments } from '../actions/commentActions';\nimport { connect } from 'react-redux';\nimport withAuth from '../hocs/withAuth';\nimport { withRouter } from 'react-router-dom';\n// import IconPhoto from './IconPhoto';\n\nclass ProfilePost extends React.Component {\n\n  state = {\n    commentsClicked: false,\n    commentsLength: 0\n  }\n\n  handleCommentsClick = (e) => {\n    var commentsScroll = e.target.parentElement.parentElement.parentElement.parentElement;\n      // if (commentsScroll) {\n      //   commentsScroll.scrollTop = commentsScroll.scrollHeight;\n      // }\n    this.setState({commentsClicked: !this.state.commentsClicked})\n  }\n\n  commentsLength = (length) => {\n    this.setState({commentsLength: length})\n  }\n\n\n  \n  componentDidMount() {\n    // console.log(this.props.post)\n    this.props.getComments();\n    fetch(`http://furbook-api.herokuapp.com/users/${this.props.post.user_id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n         Authorization: localStorage.token\n      } \n    })\n    .then(res => res.json())\n    .then(info => this.setState({postUser: info}))\n  }\n\n\n  render = () => {\n    // console.log(\"post: \", this.props)\n    // console.log(this.props.post)\n    // debugger\n    let comments = this.props.comments.filter(comment => comment.post_id === this.props.post.id)\n    let date = new Date(this.props.post.created_at)\n    date = date.toString();\n    date = date.split(' ');\n    date = date[0] + ' ' + date[1] + ' ' + date[2] + ' ' + date[3];\n    if (this.state.postUser === undefined) return null;\n    return (\n      <div className=\"post-content\">\n        <div className=\"profile-post-div\">\n          <div className=\"icon-date\">\n            <div className=\"icon-img-text\"> \n              <Link className= \"profile-post-link \"to={`/users/${this.state.postUser.id}`} >\n                <div className=\"icon-img-text\">\n                  {this.state.postUser.pro_pics.length ?\n                    <img className=\"icon-img\" src={this.state.postUser.pro_pics.slice(-1)[0].picture.url} />\n                  :\n                    <img className=\"icon-img\" src='https://image.flaticon.com/icons/png/512/17/17479.png' />\n                  }\n                  <div className=\"icon\"> \n                    {this.state.postUser.username}\n                  </div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"date\">\n              {date.toString()}\n            </div>\n          </div>\n          <div className=\"content\">\n            {this.props.post.content}\n          </div>\n          {this.state.commentsClicked ? \n            <div className=\"comments-container\">\n              <a className=\"comment-tag\" onClick={e => this.handleCommentsClick(e)}>\n                comments ({comments.length})\n              </a>\n              <Comments commentsLength={this.commentsLength} postComments={this.props.comments} info={this.props.post}/>\n            </div>\n          : \n            <a className=\"comment-tag\" onClick={this.handleCommentsClick}>comments ({comments.length})</a>}\n          <div className=\"createComment\">\n            <CreateComment postInfo={this.props.post} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  // console.log(state)\n  return {\n    user: state.currentUser,\n    comments: state.commentReducer.comments\n  }\n}\n\nconst mapDispatchToProps = {\n  // more to do for getComments redux\n  getComments: getComments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePost)","import React from 'react';\nimport ProfilePost from './ProfilePost';\n\nexport default class ProfilePhotos extends React.Component {\n\n\trender = () => {\n\t\treturn(\n\t\t\t<div className=\"profile-posts\" >\n\t\t\t\t{this.props.user.reverse_posts.map(post => <ProfilePost post={post} user={this.props.user}/>)}\n\t\t\t</div>\n\t\t)\n\t}\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createComment } from '../actions/commentActions';\nimport withAuth from '../hocs/withAuth';\nimport { withRouter } from 'react-router-dom';\nimport UploadProPic from './uploadProPic';\n\nclass EditProfilePic extends React.Component {\n\n\n  render = () => {\n    // console.log(\"createComment:\", this.props)\n    // console.log(this.props)\n    return (\n      <div className=\"profile-modal-content\">\n        <h3 className=\"profile-close\" onClick={() => this.props.handleCloseIcon()}>x</h3>\n        <UploadProPic />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state)\n  return {\n    comments: state.commentReducer.comments,\n    user: state.currentUser,\n    posts: state.postReducer.posts\n  }\n}\n\nexport default withAuth(connect(mapStateToProps)(withRouter(EditProfilePic)));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createComment } from '../actions/commentActions';\nimport withAuth from '../hocs/withAuth';\nimport { withRouter } from 'react-router-dom';\n\nclass EditProfilePic extends React.Component {\n\n  state = {\n    // posts: this.props.currentUser.posts,\n    bioContent: ''\n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  \n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // if (this.props.messageInfo !== undefined) {\n    fetch(`http://furbook-api.herokuapp.com/users/${this.props.profileUser.id}`, {\n      'method': 'PATCH',\n      'headers': {\n        'Authorization': localStorage.token,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      'body': JSON.stringify(\n      {\n        \"bio\": this.state.bioContent\n      }) \n    })\n  }\n\n\n  render = () => {\n    // console.log(\"createComment:\", this.props)\n    // console.log(this.props)\n    return (\n      <div className=\"profile-modal-content\">\n        <h3 className=\"profile-close\" onClick={() => this.props.handleEditProfile()}>x</h3>\n        <form className=\"bioForm\" onSubmit={this.handleSubmit}>\n          <div className=\"bioInputs\">\n            <textarea className=\"bioInput\" type=\"text\" placeholder={this.props.profileUser.bio} value={this.state.bioContent} onChange={this.handleChange} name=\"bioContent\"/>\n            <input className=\"bioSubmit\" type=\"submit\" value=\"Change\"/>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state)\n  return {\n    user: state.currentUser\n  }\n}\n\nexport default withAuth(connect(mapStateToProps)(withRouter(EditProfilePic)));","import React from 'react';\nimport UploadPhoto from '../components/uploadPhoto';\nimport UploadProPic from '../components/uploadProPic';\nimport withAuth from '../hocs/withAuth';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getUserById } from '../actions/usersActions';\nimport { createMessage } from '../actions/messageActions';\nimport ProfilePhotos from '../components/ProfilePhotos';\nimport ProfilePosts from '../components/ProfilePosts';\nimport EditProfilePic from '../components/EditProfilePic';\nimport EditBio from '../components/EditBio';\n\n// make a working redux fetch for the specific profile you are on\n\nclass ProfilePage extends React.Component {\n\n  state = {\n    iconClicked: false,\n    editProfileClicked: false\n  }\n  componentDidMount = () => {\n    if (!localStorage.token && this.props.hasOwnProperty('history')) this.props.history.push(\"/\")\n   \n    this.props.getUserById(this.props.location.pathname.split(\"/\")[2]);\n    this.setState({pathname: this.props.location.pathname})\n  }\n\n  uploadedPhoto = () => {\n    this.setState({editProfileClicked: true})\n  }\n\n  handleIconClick = () => {\n    if (this.props.user.id === parseInt(this.props.location.pathname.split(\"/\")[2])) {\n      this.setState({iconClicked: true})\n    }\n  }\n\n  handleCloseIcon = () => {\n    this.setState({iconClicked: false})\n  }\n\n  handleFriendRequest = () => {\n    fetch(`http://furbook-api.herokuapp.com/friendships`, {\n      method: \"POST\",\n      headers: {\n        'Authorization': localStorage.token,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(\n        {\n          'user_id': this.props.user.id,\n          'friend_user_id': this.props.profileUser.id\n        })\n\n    }).then(res => res.json())\n    .then(this.setState({friendRequestSent: true}))\n  }\n\n  handleAccept = () => {\n    let friendship = this.props.user.pending_friend_requests.find(friendRequest => friendRequest.user.id === this.props.profileUser.id);\n    // this.props.createMessage(\"Thanks for accepting my friend request\", friendship.user_id, friendship.id)\n    fetch(`http://furbook-api.herokuapp.com/friendships/${friendship.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': localStorage.token,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(\n        {\n          \"pending\": false\n        })\n    })\n    .then(this.setState({acceptedRequest: true}))\n  }\n\n  handleUnfriend = () => {\n    let id = this.props.profileUser.friends.find(friend => parseInt(friend.user.id) === parseInt(this.props.user.id)).id;\n    fetch(`http://furbook-api.herokuapp.com/friendships/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': localStorage.token,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(this.setState({unfriended: true}))\n    .then(window.location.reload())\n  }\n\n  handleEditProfile = () => {\n    this.setState({editProfileClicked: !this.state.editProfileClicked})\n  }\n\n  // {this.state.editProfileClicked ? \n  //   <div className=\"profile-modal\">\n  //     <EditBio profileUser={this.props.user} handleEditProfile={this.handleEditProfile}/>\n  //   </div>\n  // :\n  //   null\n  // }\n\n\n  render = () => {\n    if (!Object.keys(this.props.profileUser).length) return null;\n    if (!this.props.user.id) return null;\n    if (this.props.location.pathname !== this.state.pathname) {\n      this.setState({pathname: this.props.location.pathname})\n      window.location.reload();\n    }\n    // debugger\n    console.log(this.props)\n    // debugger\n    if (this.props.profileUser.error === \"Not Found\") {\n      // debugger\n      this.props.history.push('/home')\n      window.location.reload();\n    }\n    return (\n      <div className=\"/profile\">\n        <div className=\"ProfilePage\">\n        {this.state.iconClicked ? \n          <div className=\"profile-modal\">\n            <EditProfilePic handleCloseIcon={this.handleCloseIcon}/>\n          </div>\n        :\n          null\n        }\n          <h1 className=\"Hi\"> {this.props.profileUser.username ? `${this.props.profileUser.username}'s page` : 'Getting your profile...'}</h1>\n          <div className=\"profile-icon-friend-options\">\n            <div className=\"profile-icon-div\">\n              {this.props.profileUser.pro_pics.length ?\n                <img onClick={this.handleIconClick} className=\"profile-icon\" src={this.props.profileUser.pro_pics.slice(-1)[0].picture.url} />\n              :\n                <img onClick={this.handleIconClick} className=\"profile-icon\" src='https://image.flaticon.com/icons/png/512/17/17479.png' />\n              }\n              <h2 className=\"profile-username\">{this.props.profileUser.username}</h2>\n            </div>\n            <div className=\"friend-options\">\n              {this.props.user.id === parseInt(this.props.location.pathname.split(\"/\")[2]) ?\n                null\n              :\n                this.props.profileUser.friends.find(friend => friend.user.id === this.props.user.id) || this.state.acceptedRequest || this.state.unfriended? \n                  <button onClick={this.handleUnfriend} className=\"unfriend\">Unfriend</button>\n                :\n                  this.props.profileUser.pending_friend_requests.find(friendRequest => friendRequest.user.id === this.props.user.id) || this.state.friendRequestSent ?\n                    <a className=\"request-pending\">Request Pending</a>\n                  :\n                    this.props.user.pending_friend_requests.find(friendRequest => friendRequest.user.id === this.props.profileUser.id) ?\n                      <button onClick={this.handleAccept} className=\"accept-request\"> Accept their Request </button>\n                    :\n                      <button onClick={this.handleFriendRequest} className=\"friend-request\">Friend Request</button>\n              }\n            </div>\n          </div>\n          <div className=\"posts-photos-div\">\n            {this.props.profileUser.posts.length ? \n              <div className=\"profile-posts-container\">\n                <h2> Posts</h2>\n                <ProfilePosts user={this.props.profileUser} />\n              </div>\n            :\n              <h2 className=\"no-posts-to-show\">No posts to show...</h2>\n            }\n\n            {this.props.profileUser.photos.length ? \n              <div className=\"profile-photos\">\n                <h2> Photos</h2>\n                {this.props.user.id === parseInt(this.props.location.pathname.split(\"/\")[2]) ?\n                  <UploadPhoto uploadedPhoto={this.uploadedPhoto} userInfo={this.props.userInfo}/>\n                :\n                  null\n                }\n                <ProfilePhotos photos={this.props.profileUser.photos}/>\n              </div>\n            :\n              <div className=\"profile-photos\">\n                <h2 className=\"no-photos-to-show\">No photos to show...</h2>\n                {this.props.user.id === parseInt(this.props.location.pathname.split(\"/\")[2]) ?\n                  <UploadPhoto uploadedPhoto={this.uploadedPhoto} userInfo={this.props.userInfo}/>\n                :\n                  null\n                }\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state)\n  return {\n    user: state.currentUser,\n    profileUser: state.usersReducer.user\n  }\n}\n\nconst mapDispatchToProps = {\n  getUserById: getUserById,\n  createMessage: createMessage\n}\n\nexport default withAuth(connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfilePage)))","import LoginPage from './LoginPage'\nimport SignupPage from './SignupPage'\nimport ProfilePage from './ProfilePage'\n\nexport default {\n  LoginPage,\n  SignupPage,\n  ProfilePage\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createMessage } from '../actions/messageActions';\nimport withAuth from '../hocs/withAuth';\nimport { withRouter } from 'react-router-dom';\n\nclass CreateMessage extends React.Component {\n\t\n\tstate = {\n    // posts: this.props.currentUser.posts,\n    messageContent: ''\n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  \n\n\thandleSubmit = (event) => {\n    event.preventDefault();\n    // if (this.props.messageInfo !== undefined) {\n      this.props.dispatch(createMessage(this.state.messageContent, this.props.user.id, this.props.messageInfo.friendship_id))\n      this.setState({messageContent: ''})\n\n      // this.props.messageCreated()\n    // }\n  }\n\n\trender = () => {\n\t  return (\n\t\t  <form className=\"messageForm\" onSubmit={this.handleSubmit}>\n        <div className=\"messageInputs\">\n  \t\t    <textarea className=\"messageInput\" type=\"text\" placeholder=\"Write a message...\" value={this.state.messageContent} onChange={this.handleChange} name=\"messageContent\"/>\n  \t\t    <input className=\"messageSubmit\" type=\"submit\" value=\"Send\"/>\n        </div>\n\t\t  </form>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n  // console.log(state)\n  return {\n    user: state.currentUser\n  }\n}\n\nexport default withAuth(connect(mapStateToProps)(withRouter(CreateMessage)));","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass Message extends React.Component {\n\n  state = {\n    info: {}\n  }\n  \n  componentDidMount() {\n    if (this.props.messageInfo.user_id === this.props.user.id) {\n      this.setState({info: this.props})\n      this.setState({friend: false})\n    }\n    else {\n      this.setState({info: this.props})\n      this.setState({friend: true})\n    }\n  }\n\n  componentDidUpdate() {\n    var objDiv = document.querySelector(\".dm-container\");\n    if (objDiv) {\n      objDiv.scrollTop = objDiv.scrollHeight;\n    }\n  }\n\n  render = () => {\n\n    if (!Object.keys(this.state.info).length) return null\n    if (this.state.info.messageInfo.friendship.id !== this.props.friendship_id) return null;\n    console.log(this.props)\n\n    return (\n      <li className=\"message-content views\">\n        <div className=\"message-content comment-div\">\n          { this.state.info.messageInfo.user.id !== this.props.user.id ?\n            <div className=\"friend-message-text\">\n              {this.state.info.messageInfo.content}\n            </div>\n          :\n            <div className=\"user-message-text\">\n              {this.state.info.messageInfo.content}\n            </div>\n          }\n        </div>\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state)\n  return {\n    user: state.currentUser\n  }\n}\n\nexport default connect(mapStateToProps)(Message);","import React from 'react';\nimport CreateMessage from './CreateMessage';\nimport { getMessages, viewedMessage } from '../actions/messageActions';\n// import { viewedMessage } from '../actions/messageActions';\nimport { connect } from 'react-redux';\nimport withAuth from '../hocs/withAuth';\nimport { withRouter } from 'react-router-dom';\nimport Message from './Message';\n\nclass MessageFriend extends React.Component {\n\n\t// state = {\n\t// \tmessageOpend: false\n\t// }\n\n\t// loop = setInterval(() => {this.props.getMessages()}, 3000)\n\n\tcomponentDidMount() {\n\t\tthis.props.getMessages()\n\t}\n\n  // componentWillUnmount() {\n  // \tclearInterval(this.loop)\n  // }\n\n\thandleOpenMessages = (notifications) => {\n\t\tthis.props.openMessage(this.props.messageInfo.friendship_id);\n\t\tnotifications.forEach( message => this.props.updateMessage(message))\n\t}\n\n\thandleCloseMessages = () => {\n\t\tthis.props.closeMessage();\n\t\tthis.props.getMessages();\n\t}\n\n\tmessageCreated = () => {\n\t\t// this.props.getMessages();\n\t}\n\n\trender = () => {\n\t\t// debugger\n\n\t\tconsole.log(this.props)\n\t\t// debugger\n\n\t\t// debugger\n\t\t// if (!Object.keys(this.props.messages).length) return null\n\t\tlet notifications = this.props.messages.filter(message => !message.viewed && message.user.id === this.props.messageInfo.friend.id)\n\t\t// debugger\n\t\tlet sortedMessages = this.props.messages.sort(function(a, b) { return a.id-b.id})\n\t\treturn (\n\t\t\t\t<div className=\"chat-container\">\n\t\t\t\t\t{this.props.openedMessage === this.props.messageInfo.friendship_id ?\n\t\t\t\t\t\t<div className=\"chat\">\n\t\t\t\t\t\t\t<div className=\"top-chat\">\n\t\t\t\t\t\t\t\t<a onClick={this.handleCloseMessages} className=\"close x-out\">x</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"message-friend-name\">\n\t\t\t\t\t\t\t\t{this.props.messageInfo.friend.username}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"dm-container\">\n\t\t\t\t\t\t\t\t{sortedMessages.map(message => <Message messageInfo={message} friendship_id={this.props.messageInfo.friendship_id} friend={this.props.messageInfo.friend}/>)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<CreateMessage messageInfo={this.props.messageInfo} messageCreated={this.messageCreated}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t\t<div onClick={() => this.handleOpenMessages(notifications)} className=\"message-friend\">\n\t\t\t\t\t\t\t{this.props.messageInfo.friend.username} ({notifications.length})\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n  // console.log(state)\n  return {\n    user: state.currentUser,\n    messages: state.messageReducer.messages\n  }\n}\n\nconst mapDispatchToProps = {\n  // more to do for getComments redux\n  getMessages: getMessages,\n  viewedMessage: viewedMessage\n}\n\nexport default withAuth(connect(mapStateToProps, mapDispatchToProps)(withRouter(MessageFriend)))","import React from 'react';\nimport MessageFriend from './MessageFriend';\nclass MessageFriends extends React.Component {\n\tstate = {\n\t\topenedMessage: 0\n\t}\n\n\topenMessage = (friendshipId) => {\n\t\tthis.setState({openedMessage: friendshipId})\n\t}\n\n\tcloseMessage = () => {\n\t\tthis.setState({openedMessage: 0})\n\t}\n\t\n\trender = () => {\n\t\treturn (\n\t\t\t<div className=\"message-friends\">\n\t\t\t\t{this.props.messagesInfo.map( messageInfo => <MessageFriend closeMessage={this.closeMessage} openMessage={this.openMessage} openedMessage={this.state.openedMessage} updateMessage={this.props.updateMessage} messageInfo={messageInfo}/>)}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default MessageFriends","import React from 'react';\nimport MessageFriends from './MessageFriends'\n\nclass MessagesContainer extends React.Component {\n\n\trender = () => {\n\n\t\treturn (\n\t\t\t<div className=\"messages-container-modal\">\n\t\t\t\t<div onClick={() => this.props.handleClose()} className=\"your-dms\">\n\t\t\t\t\t<a>Messages</a><a className=\"closeout\">–</a>\n\t\t\t\t</div>\n\t\t\t\t<MessageFriends friends={this.props.friends} updateMessage={this.props.updateMessage} messagesInfo={this.props.messagesInfo}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default MessagesContainer","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SearchBar from './SearchBar';\nimport { getCurrentUser } from '../actions/userActions';\nimport withAuth from '../hocs/withAuth';\nimport { withRouter } from 'react-router-dom';\nimport MessagesContainer from './MessagesContainer';\nimport { getMessages } from '../actions/messageActions';\n\nclass MessageHeader extends React.Component {\n\n  state ={\n      open: false\n  }\n\n  handleOpen = () => {\n    this.setState({open: true})\n    this.props.getMessages()\n  }\n\n  handleClose = () => {\n    this.setState({open: false})\n    this.props.getMessages()\n  }\n\n  updateMessage = (message) => {\n    fetch(`http://furbook-api.herokuapp.com/messages/${message.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': localStorage.token,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(\n        {\n          \"viewed\": true\n        })\n    })\n  \n  }\n\n  render = () => {\n  \t// if (!localStorage.token && this.props.hasOwnProperty('history')) this.props.history.push(\"/\")\n      if (!this.props.user.id) return null;\n      // console.log(this.props)\n      if (!this.props.user.friends.length) return null\n      // debugger\n      let messages = this.props.user.messages_info.map(messages => messages.messages).flat()\n      // debugger\n\n      let notifications = messages.filter(message => !message.viewed && message.user_id !== this.props.user.id)\n\n    return (\n      <div className=\"message-setup\">\n        {this.state.open ? \n          <div className=\"messages-modal\">\n            <MessagesContainer updateMessage={this.updateMessage} friends={this.props.user.friends} handleClose={this.handleClose} messagesInfo={this.props.user.messages_info}/>\n          </div>\n        :\n          null\n        }\n        <div className=\"message-menu\">\n            <a onClick={this.handleOpen} className=\"messages-header\">messages ({notifications.length})</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state)\n  return {\n    user: state.currentUser\n  }\n}\n\nconst mapDispatchToProps = {\n  setCurrentUser: getCurrentUser,\n  getMessages: getMessages\n}\n\nexport default withAuth(connect(mapStateToProps, mapDispatchToProps)(withRouter(MessageHeader)))","import React from 'react';\nimport './App.css';\n// import LoginPage from './containers/LoginPage';\nimport { Switch, Route } from 'react-router-dom';\nimport HomePage from './containers/HomePage';\nimport HomeHeader from './components/HomeHeader';\n// import ProfilePage from './containers/ProfilePage';\n// import SignupPage from './containers/SignupPage';\nimport Pages from './pages';\nimport { connect } from 'react-redux';\nimport MessageHeader from './components/MessageHeader';\nimport { HashRouter } from 'react-router-dom';\n\nclass App extends React.Component {\n\n\n  render = () => {\n    return (\n      <HashRouter basename='/'>\n        <React.Fragment>\n            <HomeHeader />\n            <MessageHeader />\n              <Switch>\n                <Route exact path='/signup' component={Pages.SignupPage} />\n                <Route exect path='/home' render={(routerProps)=> <HomePage  {...routerProps} component={HomePage} /> }/>\n                <Route exact path='/users/:id' component={Pages.ProfilePage} />\n                <Route path='/' component={Pages.LoginPage} />\n              </Switch>\n        </React.Fragment>\n      </HashRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // debugger\n  return {\n    user: state.currentUser\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","const defaultState = {\n  id: null,\n  username: '',\n  loading: false\n}\n\nexport default (state = defaultState, action) => {\n  // console.log('in root reducer', action);\n  // debugger\n  switch (action.type) {\n    case 'LOGIN_REQUEST_START':\n      return {...state, loading: true}\n    case 'GET_PROFILE_REQUEST_SUCCESS':\n    case 'LOGIN_REQUEST_SUCCESS':\n      return {...action.user, loading: false}\n    case 'LOGIN_REQUEST_FAILURE':\n      return {...state, loading: false}\n    case 'LOGOUT':\n      return defaultState\n    default:\n      return state\n  }\n}","const defaultState = {\n\tposts: []\n}\n\nexport default (state = defaultState, action) => {\n  // console.log('in messages reducer', action);\n\n  switch (action.type) {\n  \tcase 'FETCH_MY_POSTS':\n      return {\n        ...state,\n        posts: action.payload\n      }\n    case 'CREATE_POST':\n    \t// debugger\n      return {\n        posts: [action.payload, ...state.posts]\n      }\n    case 'FETCH_MY_POST':\n      return {\n        ...state,\n        post: action.payload\n      }\n    default:\n      return state\n  }\n}\n","const defaultState = {\n\tcomments: []\n}\n\nexport default (state = defaultState, action) => {\n  // console.log('in messages reducer', action);\n\n  switch (action.type) {\n    case 'CREATE_COMMENT':\n      \n      return {\n      \t...state,\n        comments: [...state.comments, action.payload]\n      }\n      // debugger\n    case 'FETCH_MY_COMMENTS':\n      // debugger\n      return {\n        ...state,\n        comments: action.payload\n      }\n    default:\n      return state\n  }\n}\n","const defaultState = {\n\tusers: [],\n  user: {}\n}\n\nexport default (state = defaultState, action) => {\n  // console.log('in messages reducer', action);\n  // debugger\n  switch (action.type) {\n  \tcase 'FETCH_USERS':\n      return {\n        ...state,\n        users: action.payload\n      }\n    case 'FETCH_USER':\n      return {\n        ...state, \n        user: action.payload\n      }\n    default:\n      return state\n  }\n}\n","const defaultState = {\n\tmessages: []\n}\n\nexport default (state = defaultState, action) => {\n  // console.log('in messages reducer', action);\n\n  switch (action.type) {\n    case 'CREATE_MESSAGE':\n      // debugger\n      return {\n      \t...state,\n        messages: [...state.messages, action.payload]\n      }\n\n      case 'FETCH_MY_MESSAGES':\n      // debugger\n      return {\n        ...state,\n        messages: action.payload\n      }\n      case 'VIEWED_MESSAGE':\n      // debugger\n      return {\n        ...state,\n        messages: [...state.messages, action.payload]\n      }\n      // debugger\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux';\nimport currentUser from './currentUserReducer';\nimport loggedIn from './loggedInReducer';\nimport postReducer from './postReducer';\nimport commentReducer from './commentReducer';\nimport usersReducer from './usersReducer';\nimport messageReducer from './messageReducer';\n\nexport default combineReducers({\n  currentUser,\n  loggedIn, \n  postReducer,\n  commentReducer,\n  usersReducer,\n  messageReducer\n})","const loggedInDefault = false\n\nexport default (state = loggedInDefault, action) => {\n  // console.log(action.type);\n  switch (action.type) {\n    case 'LOGIN_REQUEST_SUCCESS':\n      return true\n    default:\n      return state\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport rootReducer from './reducers/rootReducer.js'\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}